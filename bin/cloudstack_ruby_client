#!/usr/bin/env ruby
require 'readline'
require 'yaml'
require 'json'
require 'cloudstack_ruby_client'


case ARGV.first when '-h', '--help', '--usage', '-?', 'help', nil
  puts CloudstackRubyClient::Help
  exit ARGV.first ? 0 : 1
when '--version'
  puts CloudstackRubyClient::Version
  exit 0
end


APIKEY    = ARGV[2]
SECRETKEY = ARGV[3]
URL       = "http://#{ARGV[0]}:#{ARGV[1]}/client/api/"

comp = proc { |s| CloudstackRubyClient::Client.API_LIST.sort.grep(/^#{Regexp.escape(s)}/) }

client = nil

begin
  client = CloudstackRubyClient::Client.new(URL, APIKEY, SECRETKEY, false)
rescue
  puts "Error, cannot initiate the cloudStackRubyClient."
  exit
end

puts "="*100
puts "Connected to host : #{URL}"
puts "APIKEY : #{APIKEY}"
puts "SECRETKEY : #{SECRETKEY}"
puts "="*100

Readline.completion_append_character = " "
Readline.completion_proc = comp
Readline.completer_word_break_characters = ""

stty_save = `stty -g`.chomp

begin
  while line = Readline.readline("cloudstack(#{ARGV[0]}:#{ARGV[1]})>>", true)
    begin
      command  = line.split(' ')[0].strip
      argument = line.gsub(command, '').strip
  
      if argument
        argument = JSON.parse("{" + line.gsub(command, '').gsub('\'', '"').gsub('=>', ':') + "}")
        puts client.method(command).call argument
      else
        puts client.method(command).call
      end
    rescue ArgumentError => e
      puts "#{e.to_s}"
    rescue CloudstackRubyClient::RequestError => e
      puts "Error #{e.response.code}: #{JSON.pretty_generate(e.json)}"
    rescue RuntimeError => e
      puts "Oops! something bad happened. Please try again"
    rescue
      puts "Sorry, command not supported"
    end
  end
rescue Interrupt => e
  puts %Q{

    Disconnected from the host
  }
  system('stty', stty_save) # Restore
  exit
end
